#include <WiFi.h>
#include <PubSubClient.h>

#define LED 5
#define LED2 4
#define LED3 2
int LDR = 32;
int LDRReading=0 ;
int threshold_val = 800; 
int lEDBrightness = 0; 
int flag=0;

void callback(char* subscribetopic, byte* payload, unsigned int payloadLength);

#define ORG "ar5gyf"
#define DEVICE_TYPE "street"
#define DEVICE_ID "0987"
#define TOKEN "87654321"
String data;
float h, t; 

char server[]= ORG ".messaging.internetofthings.ibmcloud.com";
char publishTopic[] = "iot-2/evt/Data/fmt/json";
char subscribetopic[] = "iot-2/cmd/test/fmt/String"; 
char authMethod[] = "use-token-auth"; 
char token[] = TOKEN;
char clientId[] = "d:" ORG ":"DEVICE_TYPE":" DEVICE_ID;

WiFiClient wifiClient; 
PubSubClient client(server, 1883, callback ,wifiClient); 
void setup()
{
  Serial.begin(115200);

pinMode(LED, OUTPUT);
pinMode(LED2, OUTPUT);
pinMode(LED3, OUTPUT);
delay(10);
Serial.println();
wificonnect();
mqttconnect();
}

void loop()
{
if (!client.loop()) {
   mqttconnect();
  }
}
void mqttconnect() {
if (!client.connected()) {
   Serial.print("Reconnecting client to ");
   Serial.println(server);
   while (!client.connect(clientId, authMethod, token)) { 
     Serial.print(".");
     delay(500);
   }

initManagedDevice();
Serial.println();
 }
}
void wificonnect() 
{
  Serial.println();
  Serial.print("Connecting to ");

WiFi.begin("Wokwi-GUEST", "", 6);
while (WiFi.status() != WL_CONNECTED) {
  delay(500);
  Serial.print(".");
}
Serial.println("");
Serial.println("WIFI connected");
Serial.println("IP address: "); 
Serial.println(WiFi.localIP());
}

void initManagedDevice() {
if (client.subscribe(subscribetopic)){
   Serial.println(subscribetopic);
   Serial.println("subscribe to cmd OK");
} else { 
  Serial.println("subscribe to cmd FAILED");
  }
}

void callback(char* subscribetopic, byte* payload, unsigned int payloadLength)
{


Serial.print("callback invoked for topic: ");
Serial.println(subscribetopic);

for (int i = 0; i < payloadLength; i++) {
  data += (char)payload[i];
}

Serial.println("data: "+ data );
if(data=="lighton1")
{
Serial.println(data);
digitalWrite (LED, HIGH);

}

else if(data=="lightoff1")
{
  Serial.println(data);
  digitalWrite(LED, LOW);


}
else if(data =="lighton2")
{
Serial.println(data);
digitalWrite(LED2, HIGH);

}

else if(data=="lightoff2")
{
Serial.println(data);
digitalWrite(LED2, LOW);

}
else if(data =="lighton3")
{
  Serial.println(data);
 digitalWrite(LED3, HIGH);

}

else if(data=="lightoff3")
{
Serial.println(data);
digitalWrite(LED3, LOW);

}
data="";

}

